getwd()
knitr::opts_chunk$set(echo = TRUE)
library(xts); library(quantmod); library(plyr)
library(xts); library(quantmod); library(plyr)
library("lmtest") ##load required library for grangertest
mktsym<- c("^BSESN", "^BVSP","^FTSE","^GDAXI","^GSPC","^HSCE",
"^IBEX","^JKSE","^MXX","^N225","^TWII","^VLIC","^VIX")
marktCtry<-c("India", "Brazil","UK","Germany","USA","China-Shanghai",
"Spain","Indonesia","Mexico","Japan","Taiwan","VLIC","VIX")
dateI="2016-07-01"; dateF="2018-06-30"
#Get data from yahoo finance
data.env<-new.env()
l_ply(marktCtry, function(sym) try(getSymbols(sym,src="yahoo",from=dateI,to=dateF,env=data.env),silent=T))
dateI="2016-07-01"; dateF="2018-06-30"
#Get data from yahoo finance
data.env<-new.env()
l_ply(mktsym, function(sym) try(getSymbols(sym,src="yahoo",from=dateI,to=dateF,env=data.env),silent=T))
dateI="2016-07-01"; dateF="2018-06-30"
#Get data from yahoo finance
data.env<-new.env()
l_ply(marktCtry, function(Ctry) try(getSymbols(Ctry,src="yahoo",from=dateI,to=dateF,env=data.env),silent=T))
dateI="2016-07-01"; dateF="2018-06-30"
#Get data from yahoo finance
data.env<-new.env()
l_ply(marktCtry, function(sym) try(getSymbols(sym,src="yahoo",from=dateI,to=dateF,env=data.env),silent=T))
dateI="2016-07-01"; dateF="2018-06-30"
#Get data from yahoo finance
data.env<-new.env()
l_ply(mktsym, function(sym) try(getSymbols(sym,src="yahoo",from=dateI,to=dateF,env=data.env),silent=T))
head(data.env)
View(data.env)
data.env <- readRDS("data/WorldMarkts99_20.RDS")
markets <- ls(data.env)
### loop through to get Ad.Close, compute weekly return and merge all stocks and treat as xts objects
returns <- xts()
per<- "weekly" ## "monthly", "daily"##period of sampling
for(i in seq_along(markets)) {
sym <- markets[i]
returns <- merge(returns,
periodReturn(Ad(get(sym,envir=data.env)),period=per,type = "log"))
#periodReturn(Op(get(sym,envir=data.env)),period=per,type = "arithmetic"))
}
data.env <- readRDS("data/WorldMarkts99_20.RDS")
markets <- ls(data.env)
### loop through to get Ad.Close, compute weekly return and merge all stocks and treat as xts objects
returns <- xts()
per<- "weekly" ## "monthly", "daily"##period of sampling
for(i in seq_along(markets)) {
sym <- markets[i]
returns <- merge(returns,
periodReturn(Ad(get(sym,envir=data.env)),period=per,type = "log"))
#periodReturn(Op(get(sym,envir=data.env)),period=per,type = "arithmetic"))
}
##Resolve NA's. Below a sloppy solution. Do something more intelligent
returns[is.na(returns)]<-0 ##imputation of 0 ##or impute previous non 0 return
colnames(returns) <- paste(markets,".ret",sep="")
##Extract the epoch to analysis
dI="2016-07-01"; dF="2018-06-30"
Retp <- returns[paste(dI,"/",dF,sep=""),]
##Extract the epoch to analysis
dI="2016-07-01"; dF="2018-06-30"
Retp <- returns[paste(dI,"/",dF,sep=""),]
##Granger causality test for lag 1
h=1
grangertest(Retp,h)
Retp
head(Retp)
library(xts); library(quantmod); library(plyr)
library("lmtest") ##load required library for grangertest
library("MTS")
##Granger causality test for lag 1
h=1
GrangerTest(Retp,p=1)
data.env <- readRDS("data/WorldMarkts99_20.RDS")
markets <- ls(data.env)
### loop through to get Ad.Close, compute weekly return and merge all stocks and treat as xts objects
returns <- xts()
per<- "weekly" ## "monthly", "daily"##period of sampling
for(i in seq_along(markets)) {
sym <- markets[i]
returns <- merge(returns,
periodReturn(Ad(get(sym,envir=data.env)),period=per,type = "log"))
#periodReturn(Op(get(sym,envir=data.env)),period=per,type = "arithmetic"))
}
##Resolve NA's. Below a sloppy solution. Do something more intelligent
#returns[is.na(returns)]<-0 ##imputation of 0 ##or impute previous non 0 return
colnames(returns) <- paste(markets,".ret",sep="")
##Extract the epoch to analysis
dI="2016-07-01"; dF="2018-06-30"
Retp <- returns[paste(dI,"/",dF,sep=""),]
head(Retp)
write.csv(Retp,'Returns-filledna.csv')
Retp
str(Retp)
colnames(Retp)
df <- cbind(newColName = rownames(Retp),Retp)
rownames(df) <- 1:nrow(df)
df
df <- cbind(newColName = rownames(Retp),Retp)
rownames(df) <- 1:nrow(df)
df
df[,14] <- rownames(df)
rownames(df)
View(df)
library(xts); library(quantmod); library(plyr)
library("lmtest") ##load required library for grangertest
library("MTS")
library(zoo)
write.csv(as.data.frame(Retp),'Returns-filledna.csv')
write.csv(as.data.frame(Retp),'Returns-withna.csv')
ret <-as.data.frame(Retp)
typeof(ret)
